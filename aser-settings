#!/usr/bin/env bash
# üß† aserdev's Rofi Control Center ‚Äî Simplified with Screenrec Integration
# Minimal deps: rofi, notify-send, wl-clipboard, a terminal (kitty preferred)
set -euo pipefail
IFS=$'\n\t'

TERMINAL="${TERMINAL:-kitty}"
EDITOR="${EDITOR:-nano}"
ROFI_CMD="${ROFI_CMD:-rofi -dmenu -i -p}"

rofi_yn() {
  local prompt="${1:-Proceed?}"
  local ans
  ans=$(printf 'Yes\nNo' | rofi -dmenu -p "$prompt")
  [[ "$ans" == "Yes" ]]
}

ask_install() {
  local pkg="$1"
  local bin="${2:-$1}"
  if command -v "$bin" &>/dev/null; then
    return 0
  fi

  if ! rofi_yn "$pkg not found. Install?"; then
    return 1
  fi

  if command -v yay &>/dev/null; then
    $TERMINAL -e bash -c "yay -S --noconfirm $pkg || read -p 'Install failed, press enter...'"
  else
    $TERMINAL -e bash -c "sudo pacman -S --noconfirm $pkg || read -p 'Install failed, press enter...'"
  fi
}

open_in_thunar() {
  local path="${1:-$HOME}"
  if ! command -v thunar &>/dev/null; then
    ask_install thunar || xdg-open "$path" >/dev/null 2>&1 || $TERMINAL -e "$EDITOR" "$path"
  else
    thunar "$path" &
  fi
}

open_file_gui_or_terminal() {
  local file="$1"
  if command -v pluma &>/dev/null; then
    pluma "$file" &
  else
    $TERMINAL -e bash -c "$EDITOR '$file'; read -p 'Press enter to exit...'"
  fi
}

settings_menu() {
  local options=(
    "üåÄ  Hyprland"
    "üß≠  Waybar"
    "üéõÔ∏è  Rofi"
    "üñºÔ∏è  Wallpaper"
    "‚å®Ô∏è  Keybinds"
    "üé®  Color Picker"
    "üîä  Audio Settings"
    "üóÇÔ∏è  All Settings"
    "‚¨ÖÔ∏è  Back"
  )
  local choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "Settings")

  case "$choice" in
    "üåÄ  Hyprland") open_in_thunar "$HOME/.config/hypr" ;;
    "üß≠  Waybar") open_in_thunar "$HOME/.config/waybar" ;;
    "üéõÔ∏è  Rofi") open_in_thunar "$HOME/.config/rofi" ;;
    "üñºÔ∏è  Wallpaper") if command -v waypaper &>/dev/null; then waypaper --open & else ask_install waypaper || rofi -e "No wallpaper tool found"; fi ;;
    "‚å®Ô∏è  Keybinds") [[ -f ~/.config/hypr/binds.conf ]] && open_file_gui_or_terminal "$HOME/.config/hypr/binds.conf" || rofi -e "binds.conf not found üíÄ" ;;
    "üé®  Color Picker") ask_install hyprpicker || return; color=$(hyprpicker -a 2>/dev/null || true); [[ -n "$color" ]] && wl-copy "$color" && notify-send "Color" "Copied: $color" || rofi -e "No color picked üíÄ" ;;
    "üîä  Audio Settings") ask_install pavucontrol && pavucontrol & ;;
    "üóÇÔ∏è  All Settings") open_in_thunar "$HOME/.config" ;;
    "‚¨ÖÔ∏è  Back") main_menu ;;
  esac
}

install_menu() {
  local options=(
    "üèóÔ∏è  AUR (yay)"
    "üì¶  Pacman"
    "üì¶  Flatpak"
    "üîÑ  Update All"
    "‚¨ÖÔ∏è  Back"
  )
  local choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "Install")

  case "$choice" in
    "üèóÔ∏è  AUR (yay)") pkg=$(rofi -dmenu -p "AUR package:"); [[ -n "$pkg" ]] && $TERMINAL -e "yay -S $pkg" ;;
    "üì¶  Pacman") pkg=$(rofi -dmenu -p "Pacman package:"); [[ -n "$pkg" ]] && $TERMINAL -e "sudo pacman -S $pkg" ;;
    "üì¶  Flatpak") pkg=$(rofi -dmenu -p "Flatpak ID:"); [[ -n "$pkg" ]] && $TERMINAL -e "flatpak install -y $pkg" ;;
    "üîÑ  Update All") $TERMINAL -e bash -c 'sudo pacman -Syu --noconfirm; flatpak update -y; yay -Syu --noconfirm; read -p "‚úÖ Done! Press enter..."' ;;
    "‚¨ÖÔ∏è  Back") main_menu ;;
  esac
}

clipboard_menu() {
  local options=("üìã  Open Clipboard" "üßπ  Clear Clipboard" "‚¨ÖÔ∏è  Back")
  local choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "Clipboard")
  case "$choice" in
    "üìã  Open Clipboard") [[ -x ~/.local/bin/rofi-cliphist ]] && bash ~/.local/bin/rofi-cliphist || ask_install cliphist ;;
    "üßπ  Clear Clipboard") command -v cliphist &>/dev/null && cliphist wipe && notify-send "Clipboard" "Cleared" || rofi -e "No cliphist" ;;
    "‚¨ÖÔ∏è  Back") main_menu ;;
  esac
}

sysinfo_menu() {
  local options=("üß†  Brokefetch" "‚ö°  Fastfetch" "üìä  Btop" "‚¨ÖÔ∏è  Back")
  local choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "System Info")
  case "$choice" in
    "üß†  Brokefetch") command -v brokefetch &>/dev/null && $TERMINAL -e brokefetch || ask_install brokefetch ;;
    "‚ö°  Fastfetch") ask_install fastfetch && $TERMINAL -e fastfetch ;;
    "üìä  Btop") ask_install btop && $TERMINAL -e btop ;;
    "‚¨ÖÔ∏è  Back") main_menu ;;
  esac
}

main_menu() {
  local options=(
    "‚öôÔ∏è  Settings"
    "üöÄ  Run Command"
    "üì¶  Install"
    "üìã  Clipboard"
    "üòÄ  Emoji Picker"
    "üì∏  Screen Recording"
    "üß†  System Info"
    "üîã  Power"
    "‚ÑπÔ∏è  About"
  )
  local choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "Aser Control Center")
  case "$choice" in
    "‚öôÔ∏è  Settings") settings_menu ;;
    "üöÄ  Run Command") rofi -show run ;;
    "üì¶  Install") install_menu ;;
    "üìã  Clipboard") clipboard_menu ;;
    "üòÄ  Emoji Picker") rofi -show emoji ;;
    "üì∏  Screen Recording") ~/.local/bin/screenrec & ;;
    "üß†  System Info") sysinfo_menu ;;
    "üîã  Power") command -v wlogout &>/dev/null && wlogout || rofi -e "wlogout not installed" ;;
    "‚ÑπÔ∏è  About") xdg-open "https://github.com/aserdevyt/aserdev-os/" ;;
    *) exit 0 ;;
  esac
}

main_menu
